#!/bin/bash

# üîç Diagnostick√Ω skript pro Pracovn√≠ den√≠k na Ubuntu Server

set -e

echo "üîç Diagnostika aplikace Pracovn√≠ den√≠k..."

# Barvy pro v√Ωstup
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo ""
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}========================================${NC}"
}

APP_NAME="pracovni-denik"
APP_DIR="/var/www/${APP_NAME}"

print_header "Z√ÅKLADN√ç INFORMACE O SYST√âMU"
echo "Datum: $(date)"
echo "U≈æivatel: $(whoami)"
echo "Syst√©m: $(lsb_release -d | cut -f2)"
echo "Architektura: $(uname -m)"
echo "Uptime: $(uptime)"

print_header "VERZE NAINSTALOVAN√âHO SOFTWARE"
echo "Node.js: $(node --version 2>/dev/null || echo 'NEN√ç NAINSTALOV√ÅNO')"
echo "npm: $(npm --version 2>/dev/null || echo 'NEN√ç NAINSTALOV√ÅNO')"
echo "PM2: $(pm2 --version 2>/dev/null || echo 'NEN√ç NAINSTALOV√ÅNO')"
echo "Nginx: $(nginx -v 2>&1 | cut -d' ' -f3 2>/dev/null || echo 'NEN√ç NAINSTALOV√ÅNO')"

print_header "KONTROLA ADRES√Å≈ò≈Æ A SOUBOR≈Æ"
if [ -d "$APP_DIR" ]; then
    print_success "Adres√°≈ô aplikace existuje: $APP_DIR"
    echo "Obsah adres√°≈ôe:"
    ls -la "$APP_DIR" | head -20
    echo ""
    
    if [ -f "$APP_DIR/package.json" ]; then
        print_success "package.json existuje"
    else
        print_error "package.json NEEXISTUJE"
    fi
    
    if [ -f "$APP_DIR/ecosystem.config.json" ]; then
        print_success "ecosystem.config.json existuje"
    else
        print_error "ecosystem.config.json NEEXISTUJE"
    fi
    
    if [ -d "$APP_DIR/.next" ]; then
        print_success "Build adres√°≈ô .next existuje"
    else
        print_error "Build adres√°≈ô .next NEEXISTUJE - aplikace nebyla buildov√°na"
    fi
    
    if [ -d "$APP_DIR/node_modules" ]; then
        print_success "node_modules existuje"
    else
        print_error "node_modules NEEXISTUJE - z√°vislosti nejsou nainstalov√°ny"
    fi
else
    print_error "Adres√°≈ô aplikace NEEXISTUJE: $APP_DIR"
fi

print_header "KONTROLA PROCES≈Æ"
echo "PM2 procesy:"
pm2 list 2>/dev/null || print_error "PM2 seznam proces≈Ø nedostupn√Ω"

echo ""
echo "Node.js procesy:"
ps aux | grep node | grep -v grep || echo "≈Ω√°dn√© Node.js procesy"

echo ""
echo "Nginx procesy:"
ps aux | grep nginx | grep -v grep || echo "≈Ω√°dn√© Nginx procesy"

print_header "KONTROLA PORT≈Æ"
echo "Naslouchaj√≠c√≠ porty:"
ss -tlnp | grep -E ':(80|443|3000|8080)' || echo "≈Ω√°dn√© relevantn√≠ porty"

print_header "KONTROLA SLU≈ΩEB"
echo "Nginx status:"
systemctl status nginx --no-pager -l || print_error "Nginx nen√≠ spu≈°tƒõn"

echo ""
echo "Firewall (UFW) status:"
sudo ufw status || echo "UFW nen√≠ nakonfigurov√°no"

print_header "KONTROLA LOG≈Æ"
echo "Posledn√≠ chyby v system logu:"
journalctl -u nginx --no-pager -l --since "1 hour ago" | tail -10 || echo "≈Ω√°dn√© nginx logy"

echo ""
echo "PM2 logy (pokud existuj√≠):"
if [ -f "/var/log/pm2/pracovni-denik-error.log" ]; then
    echo "Chybov√© logy:"
    tail -10 /var/log/pm2/pracovni-denik-error.log || echo "Nelze naƒç√≠st chybov√© logy"
else
    echo "Chybov√© logy neexistuj√≠"
fi

if [ -f "/var/log/pm2/pracovni-denik-out.log" ]; then
    echo "V√Ωstupn√≠ logy:"
    tail -10 /var/log/pm2/pracovni-denik-out.log || echo "Nelze naƒç√≠st v√Ωstupn√≠ logy"
else
    echo "V√Ωstupn√≠ logy neexistuj√≠"
fi

print_header "KONTROLA NGINX KONFIGURACE"
if [ -f "/etc/nginx/sites-available/$APP_NAME" ]; then
    print_success "Nginx konfigurace existuje"
    echo "Obsah konfigurace:"
    cat "/etc/nginx/sites-available/$APP_NAME"
else
    print_error "Nginx konfigurace NEEXISTUJE"
fi

if [ -L "/etc/nginx/sites-enabled/$APP_NAME" ]; then
    print_success "Nginx konfigurace je aktivn√≠"
else
    print_error "Nginx konfigurace NEN√ç aktivn√≠"
fi

print_header "KONTROLA S√ç≈§OV√â DOSTUPNOSTI"
echo "Test p≈ôipojen√≠ k localhost:3000:"
curl -s -o /dev/null -w "HTTP Status: %{http_code}" http://localhost:3000 || echo "Nedostupn√©"

echo ""
echo "Test p≈ôipojen√≠ k localhost:80:"
curl -s -o /dev/null -w "HTTP Status: %{http_code}" http://localhost:80 || echo "Nedostupn√©"

print_header "RYCHL√Å OPRAVA - POKUS O RESTART"
echo "Pokus√≠m se restartovat aplikaci..."

if command -v pm2 &> /dev/null; then
    cd "$APP_DIR" 2>/dev/null || print_error "Nelze p≈ôej√≠t do adres√°≈ôe aplikace"
    
    echo "Zastavuji PM2 aplikaci..."
    pm2 stop $APP_NAME 2>/dev/null || echo "Aplikace nebyla spu≈°tƒõna"
    
    echo "Spou≈°t√≠m PM2 aplikaci..."
    pm2 start ecosystem.config.json 2>/dev/null || echo "Chyba p≈ôi spu≈°tƒõn√≠"
    
    echo "Ukl√°d√°m PM2 konfiguraci..."
    pm2 save 2>/dev/null || echo "Chyba p≈ôi ukl√°d√°n√≠"
    
    echo "Nov√Ω status:"
    pm2 status
else
    print_error "PM2 nen√≠ nainstalov√°no"
fi

print_header "DOPORUƒåEN√ç"
echo "Na z√°kladƒõ v√Ω≈°e uveden√Ωch informac√≠:"
echo "1. Zkontrolujte, zda jsou v≈°echny z√°vislosti nainstalov√°ny (npm install)"
echo "2. Zkontrolujte, zda je aplikace buildov√°na (npm run build)"
echo "3. Zkontrolujte PM2 logy pro podrobn√© chyby"
echo "4. Zkontrolujte Nginx konfiguraci"
echo "5. Zkontrolujte, zda jsou porty dostupn√©"

print_success "Diagnostika dokonƒçena!"
